/* eslint-disable react/no-unescaped-entities */
import type { NextPage } from "next";
import Head from "next/head";
import React, { useEffect } from "react";
import { HomeCointainer } from "../styles/components/home";
import { FiSearch } from "react-icons/fi";
import MusicFile from "./components/MusicCard";
import axios from "axios";
import MusicCardSelector from "./components/MusicSelectorCard";

import { RiLoader4Fill } from "react-icons/ri";
import Link from "next/link";

const Home: NextPage = () => {
  const [inputValue, setInputValue] = React.useState("");
  const [musicList, setMusicList] = React.useState([]);
  const [isLoading, setIsLoading] = React.useState(false);
  const [isLoadingLyrics, setIsLoadingLyrics] = React.useState(false);
  const [selectedMusic, setSelectedMusic]: any = React.useState({});
  const [musicLyric, setMusicLyric] = React.useState("");
  const [lyricsError, setLyricsError] = React.useState(true);

  useEffect(() => {
    setLyricsError(false);
    setIsLoadingLyrics(true);
    const musictoFind = selectedMusic;
    if (musictoFind.author != undefined || musictoFind.title != undefined) {
      axios
        .get(
          `https://api.lyrics.ovh/v1/${musictoFind.author}/${musictoFind.title}`
        )
        .then((res) => {
          if (res.status === 200) {
            setMusicLyric(res.data.lyrics);
            setIsLoadingLyrics(false);
            setLyricsError(false);
          }
        })
        .catch((err) => {
          setIsLoadingLyrics(false);
          setLyricsError(true);
        });
    }
  }, [selectedMusic]);

  useEffect(() => {
    setIsLoading(true);
    const getData = async () => {
      if (inputValue.trim() !== "") {
        axios
          .get(`https://api.deezer.com/search?q=${encodeURI(inputValue)}`, {
            headers: { "Access-Control-Allow-Origin": "*" },
          })
          .then((res) => {
            setMusicList(res.data.data.slice(0, 3));
            setIsLoading(false);
          });
      }
    };
    const timer = setTimeout(() => {
      if (inputValue) getData();
    }, 700);
    return () => clearTimeout(timer);
  }, [inputValue]);

  const handleMusicClick = (
    author: string,
    title: string,
    album: string,
    cover: string
  ) => {
    setSelectedMusic({ author, title, album, cover });
    setInputValue("");
  };

  return (
    <HomeCointainer>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex items-center flex-col">
        <div className="w-[90%] max-w-[1000px] flex justify-center flex-col">
          <div className="">
            <div className="mt-10 flex justify-center flex-col items-center">
              <h1 className="text-[#ffffff] font-bold text-[2rem]">
                Sing<span className="text-[#2A79EF] font-extrabold">Watch</span>
              </h1>
              <h3 className="mt-2 text-[14.5px] font-normal w-[100%] text-center text-white/90">
                Find lyrics in a second without any delay
              </h3>
            </div>
            <div
              className="mt-5 rounded-[10px] flex items-center justify-between border-[2px] border-[#5385d08a] bg-[#2A2B35] w-full h-[50px]"
              id="searchbar"
            >
              <FiSearch className="text-[27px] text-white ml-3" />
              <input
                value={inputValue}
                onChange={(e) => setInputValue(e.target.value)}
                type="text"
                placeholder="Try 'Currents' by Tame Impala"
                className="w-full bg-transparent outline-none placeholder:text-[13px] placeholder:text-white/70 border-0 text-white font-normal ml-3 text-[14px] pt-1"
              />
            </div>
            {inputValue.trim() !== "" && (
              <div
                id="musicsearch"
                className="bg-[#2A2B35] border-[2px] border-[#5385d08a] w-full min-h-[80px] divide-white/30 h-auto mt-3 divide-y rounded-[10px] "
              >
                {isLoading ? (
                  <div className="w-full h-[80px] flex justify-center items-center">
                    <RiLoader4Fill className="text-[#7bb0ff] text-3xl animate-spin" />
                  </div>
                ) : musicList.length > 0 ? (
                  musicList.map((music: any, index) => (
                    <MusicCardSelector
                      key={index}
                      cover={music.album.cover}
                      title={music.title}
                      author={music.artist.name}
                      album={music.album.title}
                      onClick={() =>
                        handleMusicClick(
                          music.artist.name,
                          music.title,
                          music.album.title,
                          music.album.cover
                        )
                      }
                    />
                  ))
                ) : (
                  <div className="w-full px-3 min-h-[80px] flex justify-center items-center">
                    <h3 className="text-white text-center">
                      We couldn't find any results for your search
                    </h3>
                  </div>
                )}
              </div>
            )}
          </div>
          <div
            id="musichistory"
            className="bg-[#2A2B35] border-[2px] border-[#5385d08a] w-full min-h-[135px] mt-5  pb-2 rounded-[10px] px-4"
          >
            <h4 className="text-white text-[13px] pt-3">Music History</h4>

            <div className="flex justify-start items-center pt-3 gap-x-3 pb-2 overflow-x-auto">
              <MusicFile selected />
              <MusicFile />
              <MusicFile />
              <MusicFile />
              <MusicFile />
            </div>
          </div>
        </div>
        <div
          id="lycris"
          className="w-[100%] max-w-[1000px] bg-[#1f4174] min-h-[600px]  mt-10 rounded-t-[30px]"
        >
          {selectedMusic.author != undefined ? (
            <div className="w-full h-full flex flex-col px-[33px] py-[30px]">
              <div className="flex justify-between items-center">
                <div className="flex justify-start items-center">
                  <img
                    className="w-[4.5rem] h-[4.5rem] bg-white rounded-lg drop-shadow-xl"
                    src={selectedMusic.cover}
                  ></img>
                  <div className="flex flex-col ml-4 justify-center">
                    <h1 className="text-white ">{selectedMusic.title}</h1>
                    <h4 className="text-sm text-white/60">
                      {selectedMusic.album} - {selectedMusic.author}
                    </h4>
                  </div>
                </div>
              </div>

              <div className="mt-8">
                {isLoadingLyrics ? (
                  <div className="w-full flex justify-center items-center">
                    <RiLoader4Fill className="text-white/90 text-4xl animate-spin" />
                  </div>
                ) : lyricsError ? (
                  <div>
                    <h3 className="text-white/80 mt-10 text-center text-xl px-[30px]">
                      We couldn't find any lyrics for this song :(
                    </h3>
                    <h3 className="text-white/50 text-center text-lg px-[30px]">
                      We are working on it!
                    </h3>
                  </div>
                ) : (
                  <p className="text-white whitespace-pre-line leading-10 font-semibold text-3xl">{`${musicLyric}`}</p>
                )}
              </div>
            </div>
          ) : (
            <div className="w-full h-full px-[40px] py-[30px] flex items-center flex-col">
              <h2 className="text-white text-3xl sm:text-3xl mt-10 font-semibold text-center">
                You don't have any songs yet
              </h2>
              <h4 className="text-white/70 text-center mt-3 ">
                Add some songs to your history and we'll show you the lyrics
              </h4>
              <h2 className="mt-10 text-center text-white/90 font-medium text-[17px] max-w-[600px]">
                Sing<span className="text-[#2a79ef]">Watch</span> is an open
                source project that aims to find song lyrics without
                difficulties, after all who doesn't like to know how to sing
                their favorite song?
              </h2>
              <Link href={"https://github.com/JoaoGabriel-Lima"}>
                <a className="w-full flex justify-center" target={"_blank"}>
                  <button className="mt-10 bg-white/90 w-[90%] max-w-[300px] py-[20px] rounded-lg font-semibold drop-shadow-xl">
                    Made by JÃ£o
                  </button>
                </a>
              </Link>
            </div>
          )}
        </div>
      </main>
    </HomeCointainer>
  );
};

export default Home;
